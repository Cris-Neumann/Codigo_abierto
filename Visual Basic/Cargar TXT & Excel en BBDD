  # La 1era macro muestra el metodo para importar desde un archivo Excel a una BBDD SQL Server.
  # La 2da macro muestra el metodo para exportar desde una BBDD SQL Server a un archivo Excel.
  # La 3era macro importa un TXT sin separar columnas
  # La 4ta macro importa un TXT separando columnas
  
Sub Inserta_data_en_SQL_Server()
Dim con As ADODB.Connection, k As Double, i As Double
Dim com As New ADODB.Command
Dim rs As ADODB.Recordset ' Este se usa solo para lectura
Dim nombre As String, apellido As String, rut As String
    Set con = Nothing
    Set rs = Nothing
    Set con = New ADODB.Connection
    Set rs = New ADODB.Recordset
    con.Open "Provider=SQLOLEDB;Initial Catalog=BD_PRUEBA" & _                 ' "Catalog"  es la BBDD donde se importa la data
    ";Data Source=CRISTIAN-PC\SQLEXPRESS;integrated security=SSPI;"            ' "Data Source"  es el servidor donde se importa la data
        If con.State = 1 Then
            com.ActiveConnection = con
            com.CommandType = adCmdText
        Else
            MsgBox "No se pudo conectar a la Base de Datos"
            End
        End If
    ActiveSheet.Columns("A:C").Find("*", _
    searchorder:=xlByRows, SearchDirection:=xlPrevious).Select
    k = ActiveCell.Row
    Range("a1").Select                                                         ' El rango de donde parte la carga y qué columnas recorre depende de cada set de datos
    For i = 2 To k
        nombre = Cells(i, 1)
        apellido = Cells(i, 2)
        rut = Cells(i, 3)
        nombre = CStr(nombre)
        apellido = CStr(apellido)
        com.CommandText = "INSERT INTO TB_PRUEBA (NOMBRE, APELLIDO, RUT)" & _  ' Acá se escoje en qué tabla se importará la data
        "values ('" & nombre & "', '" & apellido & "', '" & rut & "')"
        ' Ejecución de la Query SQL anterior
        com.Execute
    Next i
    ' Cierre de la conexión
    con.Close
    MsgBox "Todo OK"
End Sub

Sub Conección_a_SQL_Server()
Dim cnn As ADODB.Connection
Dim rst As ADODB.Recordset
Dim tField As ADODB.Field
    ' Se resetean valores por si estaban abiertos antes
    Set cnn = Nothing
    Set rst = Nothing
    ' Crear los objetos
    Set cnn = New ADODB.Connection
    Set rst = New ADODB.Recordset
    ' abrir la base usando las credenciales de Windows
    cnn.Open "Provider=SQLOLEDB;Initial Catalog=escuela" & _
    ";Data Source=CRISTIAN-PC\SQLEXPRESS;integrated security=SSPI;"
    ' abrir el recordset indicando la tabla a la que queremos acceder
    rst.Open "SELECT * FROM materia", cnn, adOpenDynamic, adLockOptimistic
Dim fldCount As Integer
Dim recCount As Long
Dim i As Long
Dim j As Long
    ' Traer las cabeceras de los campos de la tabla en SQL Server hacia Excel
    i = 1
    Range("d10").Select
    fldCount = rst.Fields.Count
    For i = 1 To fldCount
        Cells(10, i).Value = rst.Fields(i - 1).Name
    Next
    ' Trae todo el contenido de la tabla en SQL Server hacia Excel
    i = 1
    j = 11
    fldCount = rst.Fields.Count
    Do While Not rst.EOF
        For i = 1 To fldCount
            Cells(j, i).Value = rst.Fields(i - 1).Value
        Next
        j = j + 1
        rst.MoveNext
    Loop
    Range("e12").Select
    ' Cerrar el recordset y la conexión
    rst.Close
    cnn.Close
End Sub

Sub Importa_TXT_sin_separar_columnas()
Dim Filtro As String
Dim nFichero As Integer
Dim i As Double
Hoja2.Activate
nFichero = FreeFile
Filtro = " TXT(*.TXT),"
txt = Application.GetOpenFilename(Filtro)
'Ahora almacenaré cada fila del txt en la variable "datos"
'y en cada interación voy copiando su contenido en hoja2.cells
If txt <> Empty Then
    Open txt For Input As nFichero
        i = 0
        Do While Not EOF(nFichero)
            Line Input #nFichero, datos
            i = i + 1
            Hoja2.Cells(i, 1).Value = datos
        Loop
    Close nFichero
End If
End Sub

Sub Importa_TXT_separando_columnas()
Dim Filtro As String
Dim nFichero As Integer
Dim sCadena As Variant
Dim i, j As Double
nFichero = FreeFile
Filtro = " TXT(*.TXT),"
txt = Application.GetOpenFilename(Filtro)
'Ahora almacenaré cada fila del txt en la variable "datos"
'y en cada interación voy copiando su contenido en hoja2.cells
If txt <> Empty Then
Open txt For Input As nFichero
i = 0
Do While Not EOF(nFichero)
Line Input #nFichero, datos
i = i + 1
'para extraer la información de cada línea de datos y entre cada espacio tabulado
        '(puede ser otro tipo de separacion como por ej:
        'sCadena = Split(datos, vbTab)tabulaciones
        'sCadena = Split(datos," ")espacios
        'sCadena = Split(datos, ",")comas
        'sCadena = Split(datos,";")punto y coma)
'usamos la función Split, en la detallamos que los datos están delimitados por 'tabulaciones "vbTab"
'si estuviesen delimitados por espaciones, sería " " y por comas ","
sCadena = Split(datos, vbTab)
'delimitamos el tamaño de la matriz (linea de datos).
fin = UBound(sCadena) + 1
'mediante un bucle for - next vamos incorporando en cada fila de Excel (i) la 'información de cada linea del txt
'y en cada columna (j) la información de cada espacio delimitado.
For j = 1 To fin
With Sheets(1)
.Cells(i, j).Value = sCadena(j - 1)
End With
Next j
Loop
Close nFichero
End If
End Sub
